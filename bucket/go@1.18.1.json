{
 "architecture": {
  "32bit": {
   "hash": "sha256:49ae65551acbfaa57b52fbefa0350b2072512ae3103b8cf1a919a02626dbc743",
   "url": "https://dl.google.com/go/go1.18.1.windows-386.zip"
  },
  "64bit": {
   "hash": "sha256:c30bc3f1f7314a953fe208bd9cd5e24bd9403392a6c556ced3677f9f70f71fe1",
   "url": "https://dl.google.com/go/go1.18.1.windows-amd64.zip"
  }
 },
 "autoupdate": {
  "architecture": {
   "32bit": {
    "url": "https://dl.google.com/go/go$version.windows-386.zip"
   },
   "64bit": {
    "url": "https://dl.google.com/go/go$version.windows-amd64.zip"
   }
  },
  "hash": {
   "url": "$url.sha256"
  }
 },
 "bin": [
  "bin/go.exe",
  "bin/gofmt.exe"
 ],
 "checkver": {
  "regex": "go([\\d.]+)\\.windows-",
  "url": "https://golang.org/dl/"
 },
 "description": "An open source programming language that makes it easy to build simple, reliable, and efficient software.",
 "extract_dir": "go",
 "homepage": "https://golang.org",
 "license": "BSD-3-Clause",
 "post_install": "        $default_dirs = @( $env:GOPATH, \"$env:USERPROFILE\\go\", \"$env:USERPROFILE\\.go\" )        $val = $( @($default_dirs |% { get-item $_ -ea silent }) + $default_dirs[0] ) | select -first 1        ensure_in_path \"$val\\bin\" $global        ",
 "pre_install": "        # GOPATH        # respect USER value, if defined        if ($env:GOPATH) { } else {            # otherwise, 1st existing known default; otherwise, 1st of known defaults            $default_dirs = @( \"$env:USERPROFILE\\go\", \"$env:USERPROFILE\\.go\" )            $val = $( @($default_dirs |% { get-item $_ -ea silent }) + $default_dirs[0] ) | select -first 1            # ensure directory exists            new-item $val -type directory -force | out-null            env GOPATH -t $global $val            env GOPATH $val        }        ",
 "version": "1.18.1"
}